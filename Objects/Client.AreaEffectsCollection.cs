// fugly, don't use this shit

using System.Collections.Generic;

namespace KarelazisBot.Objects
{
    public partial class Client
    {
        /// <summary>
        /// Contains the most common area effects in the game.
        /// </summary>
        public class AreaEffectsCollection
        {
            /// <summary>
            /// Constructor for this class.
            /// </summary>
            /// <param name="c"></param>
            public AreaEffectsCollection(Objects.Client c)
            {
                byte up = (byte)Enums.Direction.Up,
                    right = (byte)Enums.Direction.Right,
                    down = (byte)Enums.Direction.Down,
                    left = (byte)Enums.Direction.Left;

                List<byte[]> area = new List<byte[]>() {
                    new byte[] { 0xFF, 1, 0xFF }, 
                    new byte[] { 1, 1, 1 },
                    new byte[] { 0xFF, 1, 0xFF }};
                this.Explosion = new AreaEffect(area, AreaEffect.EffectType.Rune);

                area = new List<byte[]>() {
                    new byte[] { 0xFF, 0xFF, 1, 1, 1, 0xFF, 0xFF },
                    new byte[] { 0xFF, 1, 1, 1, 1, 1, 0xFF },
                    new byte[] { 1, 1, 1, 1, 1, 1, 1 },
                    new byte[] { 1, 1, 1, 1, 1, 1, 1 },
                    new byte[] { 1, 1, 1, 1, 1, 1, 1 },
                    new byte[] { 0xFF, 1, 1, 1, 1, 1, 0xFF },
                    new byte[] { 0xFF, 0xFF, 1, 1, 1, 0xFF, 0xFF }};
                this.GreatFireball = new AreaEffect(area, AreaEffect.EffectType.Rune);

                area = new List<byte[]>() {
                    new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, up, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
                    new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, up, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
                    new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, up, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
                    new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, up, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
                    new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, up, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
                    new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, up, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
                    new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, up, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
                    new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, up, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
                    new byte[] { left, left, left, left, left, left, left, left, 0xCC, right, right, right, right, right, right, right, right },
                    new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, down, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
                    new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, down, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
                    new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, down, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
                    new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, down, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
                    new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, down, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
                    new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, down, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
                    new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, down, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
                    new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, down, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF }};
                this.GreatEnergyBeam = new AreaEffect(area, AreaEffect.EffectType.Spell);

                area = new List<byte[]>() {
                    new byte[] { 0xFF, 0xFF, up, up, up, up, up, 0xFF, 0xFF },
                    new byte[] { 0xFF, 0xFF, 0xFF, up, up, up, 0xFF, 0xFF, 0xFF },
                    new byte[] { left, 0xFF, 0xFF, up, up, up, 0xFF, 0xFF, right },
                    new byte[] { left, left, left, 0xFF, up, 0xFF, right, right, right},
                    new byte[] { left, left, left, left, 0xCC, right, right, right, right },
                    new byte[] { left, left, left, 0xFF, down, 0xFF, right, right, right },
                    new byte[] { left, 0xFF, 0xFF, down, down, down, 0xFF, 0xFF, right },
                    new byte[] { 0xFF, 0xFF, 0xFF, down, down, down, 0xFF, 0xFF, 0xFF },
                    new byte[] { 0xFF, 0xFF, down, down, down, down, down, 0xFF, 0xFF }};
                this.FireWave = new AreaEffect(area, AreaEffect.EffectType.Spell);
            }

            /// <summary>
            /// Gets the area effect for the Explosion rune.
            /// </summary>
            public Objects.AreaEffect Explosion { get; private set; }
            /// <summary>
            /// Gets the area effect for the Great Fireball rune.
            /// </summary>
            public Objects.AreaEffect GreatFireball { get; private set; }

            /// <summary>
            /// Gets the area effect for the Great Energy Beam spell.
            /// </summary>
            public Objects.AreaEffect GreatEnergyBeam { get; private set; }
            /// <summary>
            /// Gets the area effect for the Energy Wave spell.
            /// </summary>
            public Objects.AreaEffect EnergyWave { get; private set; }
            /// <summary>
            /// Gets the area effect for the Fire Wave spell.
            /// </summary>
            public Objects.AreaEffect FireWave { get; private set; }
        }
    }
}
